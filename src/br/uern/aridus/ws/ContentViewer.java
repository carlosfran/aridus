package br.uern.aridus.ws;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.client.filter.LoggingFilter;
import com.sun.jersey.api.representation.Form;

@Path("/content")
public class ContentViewer {

	Properties config;
	
	public ContentViewer() throws FileNotFoundException, IOException{
		config = new Properties();
		config.load(new FileInputStream(
				"aridus-config/ContentViewer.properties"));
	}
	
	@GET
	@Path("/viewer")
	@Produces(MediaType.TEXT_HTML+"; charset=utf-8")
	public Response viewer(@QueryParam("content") String content,
			@QueryParam("profile") String profile){
		StringBuffer response = new StringBuffer();
		String adapter = config.getProperty("ADAPTER");
		String recommender = config.getProperty("RECOMMENDER");
		ClientConfig cconfig = new DefaultClientConfig();
		Client client = Client.create(cconfig);
//		client.addFilter(new HTTPBasicAuthFilter("carlosfran", "123"));
//		client.addFilter(new LoggingFilter());
		WebResource service;
		
		response.append("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
		response.append("<html lang=\"en\"><head>\n" +
				"<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n" +
				"<meta name=\"description\" content=\"" +
				"This page was generated by the web service ContentViewer. " +
				"This service carries out improvements in the accessibility of the page content" +
				" and provides recommendations related to interest of person and the adapted content. \">\n" +
				"<title>ContentViewer - The accessible and personalized content view.</title>" +
//				"<script type=\"text/javascript\"><!--" +
//				"function resizing(win){" +
//				"	document.all[win].height = document.frames[win].document.body.scrollHeight-10;" +
//				"}" +
//				"-->" +
//				"</script>" +
				"</head>" +
				"\n<body>\n" +
				"<h1 style=\"display:none;visibility:hidden;font-size:1px\">Section of main content adapted</h1>");
		
//		Adaptar conteudo principal
//		service = client.resource(adapter+"/adapt1")
//					.queryParam("pagina", content)
//					.queryParam("perfil", profile);
		ClientResponse resp;// = service.get(ClientResponse.class);
		
		String contentAdapted = adapter + "/adapt1?pagina=" + content +"&amp;perfil="+ profile;
//		if (resp.hasEntity())
//			contentAdapted = resp.getEntity(String.class);
		response.append("<iframe src=\""+ contentAdapted +"\" title=\"Adapted main content\"" +
				" name=\"AdaptedContent\" frameborder=\"0\" width=\"100%\">" +
				"<noframes lang=\"en\">Sorry, your browser does not handle frames!</noframes></iframe>");
		
//		Obtendo conteúdo recomendado
		String recommended = "";
		service = client.resource(recommender)
				.queryParam("content", content)
				.queryParam("profile", profile);
		resp = service.get(ClientResponse.class);
		if (resp.hasEntity())
			recommended = resp.getEntity(String.class);
		
//		Adaptando conteúdo recomendado
		Form form = new Form();
		form.add("pagina", recommended);
		form.add("perfil", profile);
		service = client.resource(adapter + "/adapt2");
		resp = service.post(ClientResponse.class, form);
		if (resp.hasEntity())
			recommended = resp.getEntity(String.class);
		
//		Embutindo conteúdo recomendado
		response.append("<h1 style=\"display:none;visibility:hidden;font-size:1px\">Section of recommendations</h1>" +
				"\n"+recommended + "\n</body></html>");
		return Response.status(200).entity(response.toString()).build();
	}
}
